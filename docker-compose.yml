version: "2.4"

services:
  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      # no MYSQL_DATABASE hereâ€”the init.sql will create both
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 5

  auth-service:
    build: ./auth-service
    container_name: auth-service
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL:      jdbc:mysql://mysql:3306/authdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8080:8080"

  product-service:
    build: ./product-service
    container_name: product-service
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL:      jdbc:mysql://mysql:3306/productdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8081:8081"

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    depends_on:
      - auth-service
      - product-service
    ports:
      - "9000:9000"

volumes:
  mysql_data:
